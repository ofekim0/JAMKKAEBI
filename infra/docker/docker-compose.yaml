services:
  caddy:
    container_name: caddy
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    image: lucaslorentz/caddy-docker-proxy:2.9.1-alpine
    networks:
      - caddy
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
  portainer:
    container_name: portainer
    expose:
      - 9000
    image: portainer/portainer-ce:latest
    labels:
      caddy: k11c106.p.ssafy.io
      caddy.handle_path: /portainer/*
      caddy.handle_path.0_reverse_proxy: "{{ upstreams 9000 }}"
      caddy.redir: /portainer /portainer/
    networks:
      - caddy
    pull_policy: always
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  jenkins:
    container_name: jenkins
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    expose:
      - 8080
    image: jenkins/jenkins:latest
    labels:
      caddy: k11c106.p.ssafy.io
      caddy.handle: /jenkins*
      caddy.handle.reverse_proxy: "{{ upstreams 8080 }}"
    networks:
      - caddy
    pull_policy: always
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_data:/var/jenkins_home
  mongodb:
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 
      MONGO_INITDB_ROOT_PASSWORD: 
    image: mongodb/mongodb-community-server:7.0.15-ubuntu2204
    labels:
      caddy: localhost:31061
      caddy.reverse_proxy: "{{ upstreams 27017 }}"
    networks:
      - caddy
    ports:
      - 31061:27017
    pull_policy: always
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
  mysql:
    container_name: mysql
    environment:
      MYSQL_DATABASE: jamkkaebi
      MYSQL_USER: 
      MYSQL_PASSWORD: 
      MYSQL_ROOT_PASSWORD: 
    image: mysql:8.0-debian
    labels:
      caddy: localhost:31060
      caddy.reverse_proxy: "{{ upstreams 3306 }}"
    networks:
      - caddy
    ports:
      - 31060:3306
    pull_policy: always
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mysql_data:/var/lib/mysql
  rabbitmq:
    container_name: rabbitmq
    hostname: ssafy-c106
    image: rabbitmq:4-management-alpine
    labels:
      caddy: k11c106.p.ssafy.io
      caddy.0_handle_path: /rabbit/console/*
      caddy.0_handle_path.reverse_proxy: "{{upstreams 15672}}"
      caddy.0_redir: /rabbit/console /rabbit/console/
      caddy.1_handle: /rabbit/ws*
      caddy.1_handle.reverse_proxy: "{{ upstreams 15675 }}"
      caddy_1: localhost:1883
      caddy_1.reverse_proxy: "{{upstreams 1883}}"
      caddy_2: localhost:35551
      caddy_2.reverse_proxy: "{{upstreams 5672}}"
    networks:
      - caddy
    ports:
      - 1883:1883
      - 35551:5672
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: 
      RABBITMQ_DEFAULT_PASS: 
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
    command: /bin/bash -c "rabbitmq-plugins enable --offline rabbitmq_mqtt rabbitmq_web_mqtt; rabbitmq-server"

volumes:
  caddy_data:
    name: caddy_data
  portainer_data:
    name: portainer_data
  jenkins_data:
    name: jenkins_data
  mysql_data:
    name: mysql_data
  mongodb_data:
    name: mongodb_data
  mongodb_config:
    name: mongodb_config
  rabbitmq_data:
    name: rabbitmq_data

networks:
  caddy:
    name: caddy
